{"version":3,"file":"clean-webpack-plugin.js","names":["_del","require","_path","_interopRequireDefault","e","__esModule","default","isPlainObject","value","Object","prototype","toString","call","getPrototypeOf","CleanWebpackPlugin","constructor","options","Error","allowExternal","dangerouslyAllowCleanPatternsOutsideProject","dry","console","warn","verbose","cleanStaleWebpackAssets","protectWebpackAssets","cleanAfterEveryBuildPatterns","Array","isArray","cleanOnceBeforeBuildPatterns","currentAssets","initialClean","outputPath","apply","bind","handleInitial","handleDone","removeFiles","compiler","output","path","hooks","length","emit","tap","compilation","done","stats","getStats","hasErrors","assetList","keys","assets","staleFiles","filter","previousAsset","assetCurrent","includes","sort","removePatterns","push","patterns","deleted","deleteSync","force","cwd","dryRun","dot","ignore","forEach","file","filename","relative","process","message","error","needsForce","test","exports"],"sources":["../src/clean-webpack-plugin.ts"],"sourcesContent":["import { deleteSync } from 'del';\nimport path from 'path';\nimport { Compilation, Compiler, Stats } from 'webpack';\n\nexport interface Options {\n    /**\n     * Simulate the removal of files\n     *\n     * default: false\n     */\n    dry?: boolean;\n\n    /**\n     * Write Logs to Console\n     * (Always enabled when dry is true)\n     *\n     * default: false\n     */\n    verbose?: boolean;\n\n    /**\n     * Automatically remove all unused webpack assets on rebuild\n     *\n     * default: true\n     */\n    cleanStaleWebpackAssets?: boolean;\n\n    /**\n     * Do not allow removal of current webpack assets\n     *\n     * default: true\n     */\n    protectWebpackAssets?: boolean;\n\n    /**\n     * Removes files once prior to Webpack compilation\n     *   Not included in rebuilds (watch mode)\n     *\n     * Use !negative patterns to exclude files\n     *\n     * default: ['**\\/*']\n     */\n    cleanOnceBeforeBuildPatterns?: string[];\n\n    /**\n     * Removes files after every build (including watch mode) that match this pattern.\n     * Used for files that are not created directly by Webpack.\n     *\n     * Use !negative patterns to exclude files\n     *\n     * default: []\n     */\n    cleanAfterEveryBuildPatterns?: string[];\n\n    /**\n     * Allow clean patterns outside of process.cwd()\n     *\n     * requires dry option to be explicitly set\n     *\n     * default: false\n     */\n    dangerouslyAllowCleanPatternsOutsideProject?: boolean;\n}\n\n// Copied from https://github.com/sindresorhus/is-plain-obj/blob/97480673cf12145b32ec2ee924980d66572e8a86/index.js\nfunction isPlainObject(value: unknown): boolean {\n    if (Object.prototype.toString.call(value) !== '[object Object]') {\n        return false;\n    }\n\n    const prototype = Object.getPrototypeOf(value);\n    return prototype === null || prototype === Object.getPrototypeOf({});\n}\n\nclass CleanWebpackPlugin {\n    private readonly dry: boolean;\n    private readonly verbose: boolean;\n    private readonly cleanStaleWebpackAssets: boolean;\n    private readonly protectWebpackAssets: boolean;\n    private readonly cleanAfterEveryBuildPatterns: string[];\n    private readonly cleanOnceBeforeBuildPatterns: string[];\n    private readonly dangerouslyAllowCleanPatternsOutsideProject: boolean;\n    private currentAssets: string[];\n    private initialClean: boolean;\n    private outputPath: string;\n\n    constructor(options: Options = {}) {\n        if (isPlainObject(options) === false) {\n            throw new Error(`clean-webpack-plugin only accepts an options object. See:\n            https://github.com/johnagan/clean-webpack-plugin#options-and-defaults-optional`);\n        }\n\n        // @ts-ignore\n        if (options.allowExternal) {\n            throw new Error(\n                'clean-webpack-plugin: `allowExternal` option no longer supported. Use `dangerouslyAllowCleanPatternsOutsideProject`',\n            );\n        }\n\n        if (\n            options.dangerouslyAllowCleanPatternsOutsideProject === true &&\n            options.dry !== true &&\n            options.dry !== false\n        ) {\n            // eslint-disable-next-line no-console\n            console.warn(\n                'clean-webpack-plugin: dangerouslyAllowCleanPatternsOutsideProject requires dry: false to be explicitly set. Enabling dry mode',\n            );\n        }\n\n        this.dangerouslyAllowCleanPatternsOutsideProject =\n            options.dangerouslyAllowCleanPatternsOutsideProject === true ||\n            false;\n\n        this.dry =\n            options.dry === true || options.dry === false\n                ? options.dry\n                : this.dangerouslyAllowCleanPatternsOutsideProject === true ||\n                  false;\n\n        this.verbose = this.dry === true || options.verbose === true || false;\n\n        this.cleanStaleWebpackAssets =\n            options.cleanStaleWebpackAssets === true ||\n            options.cleanStaleWebpackAssets === false\n                ? options.cleanStaleWebpackAssets\n                : true;\n\n        this.protectWebpackAssets =\n            options.protectWebpackAssets === true ||\n            options.protectWebpackAssets === false\n                ? options.protectWebpackAssets\n                : true;\n\n        this.cleanAfterEveryBuildPatterns = Array.isArray(\n            options.cleanAfterEveryBuildPatterns,\n        )\n            ? options.cleanAfterEveryBuildPatterns\n            : [];\n\n        this.cleanOnceBeforeBuildPatterns = Array.isArray(\n            options.cleanOnceBeforeBuildPatterns,\n        )\n            ? options.cleanOnceBeforeBuildPatterns\n            : ['**/*'];\n\n        /**\n         * Store webpack build assets\n         */\n        this.currentAssets = [];\n\n        /**\n         * Only used with cleanOnceBeforeBuildPatterns\n         */\n        this.initialClean = false;\n\n        this.outputPath = '';\n\n        this.apply = this.apply.bind(this);\n        this.handleInitial = this.handleInitial.bind(this);\n        this.handleDone = this.handleDone.bind(this);\n        this.removeFiles = this.removeFiles.bind(this);\n    }\n\n    apply(compiler: Compiler) {\n        if (!compiler.options.output || !compiler.options.output.path) {\n            // eslint-disable-next-line no-console\n            console.warn(\n                'clean-webpack-plugin: options.output.path not defined. Plugin disabled...',\n            );\n\n            return;\n        }\n\n        this.outputPath = compiler.options.output.path;\n\n        /**\n         * webpack 4+ comes with a new plugin system.\n         *\n         * Check for hooks in-order to support old plugin system\n         * webpack 5+ removed the old system, the check now breaks\n         */\n        const hooks = compiler.hooks;\n\n        if (this.cleanOnceBeforeBuildPatterns.length !== 0) {\n            hooks.emit.tap('clean-webpack-plugin', (compilation) => {\n                this.handleInitial(compilation);\n            });\n        }\n\n        hooks.done.tap('clean-webpack-plugin', (stats) => {\n            this.handleDone(stats);\n        });\n    }\n\n    /**\n     * Initially remove files from output directory prior to build.\n     *\n     * Only happens once.\n     *\n     * Warning: It is recommended to initially clean your build directory outside of webpack to minimize unexpected behavior.\n     */\n    handleInitial(compilation: Compilation) {\n        if (this.initialClean) {\n            return;\n        }\n\n        /**\n         * Do not remove files if there are compilation errors\n         *\n         * Handle logging inside this.handleDone\n         */\n        const stats = compilation.getStats();\n        if (stats.hasErrors()) {\n            return;\n        }\n\n        this.initialClean = true;\n\n        this.removeFiles(this.cleanOnceBeforeBuildPatterns);\n    }\n\n    handleDone(stats: Stats) {\n        /**\n         * Do nothing if there is a webpack error\n         */\n        if (stats.hasErrors()) {\n            if (this.verbose) {\n                // eslint-disable-next-line no-console\n                console.warn(\n                    'clean-webpack-plugin: pausing due to webpack errors',\n                );\n            }\n\n            return;\n        }\n\n        /**\n         * Fetch Webpack's output asset files\n         */\n        const assetList = Object.keys(stats.compilation.assets);\n\n        /**\n         * Get all files that were in the previous build but not the current\n         *\n         * (relies on del's cwd: outputPath option)\n         */\n        const staleFiles = this.currentAssets.filter((previousAsset) => {\n            const assetCurrent = assetList.includes(previousAsset) === false;\n\n            return assetCurrent;\n        });\n\n        /**\n         * Save assets for next compilation\n         */\n        this.currentAssets = assetList.sort();\n\n        const removePatterns = [];\n\n        /**\n         * Remove unused webpack assets\n         */\n        if (this.cleanStaleWebpackAssets === true && staleFiles.length !== 0) {\n            removePatterns.push(...staleFiles);\n        }\n\n        /**\n         * Remove cleanAfterEveryBuildPatterns\n         */\n        if (this.cleanAfterEveryBuildPatterns.length !== 0) {\n            removePatterns.push(...this.cleanAfterEveryBuildPatterns);\n        }\n\n        if (removePatterns.length !== 0) {\n            this.removeFiles(removePatterns);\n        }\n    }\n\n    removeFiles(patterns: string[]) {\n        try {\n            const deleted = deleteSync(patterns, {\n                force: this.dangerouslyAllowCleanPatternsOutsideProject,\n                // Change context to build directory\n                cwd: this.outputPath,\n                dryRun: this.dry,\n                dot: true,\n                ignore: this.protectWebpackAssets ? this.currentAssets : [],\n            });\n\n            /**\n             * Log if verbose is enabled\n             */\n            if (this.verbose) {\n                deleted.forEach((file) => {\n                    const filename = path.relative(process.cwd(), file);\n\n                    const message = this.dry ? 'dry' : 'removed';\n\n                    /**\n                     * Use console.warn over .log\n                     * https://github.com/webpack/webpack/issues/1904\n                     * https://github.com/johnagan/clean-webpack-plugin/issues/11\n                     */\n                    // eslint-disable-next-line no-console\n                    console.warn(\n                        `clean-webpack-plugin: ${message} ${filename}`,\n                    );\n                });\n            }\n        } catch (error) {\n            const needsForce = /Cannot delete files\\/folders outside the current working directory\\./.test(\n                error.message,\n            );\n\n            if (needsForce) {\n                const message =\n                    'clean-webpack-plugin: Cannot delete files/folders outside the current working directory. Can be overridden with the `dangerouslyAllowCleanPatternsOutsideProject` option.';\n\n                throw new Error(message);\n            }\n\n            /* istanbul ignore next */\n            throw error;\n        }\n    }\n}\n\nexport { CleanWebpackPlugin };\n"],"mappings":"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","ignoreList":[]}